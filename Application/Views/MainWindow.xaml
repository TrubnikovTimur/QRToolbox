<Window x:Class="QRToolbox.Application.Views.MainWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:QRToolbox.Application.Views" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
             xmlns:vm="clr-namespace:QRToolbox.Application.ViewModels"
             mc:Ignorable="d" 
             Title="QR Toolbox" x:Name="ThisWindow" Background="Transparent"
             WindowStartupLocation="CenterScreen" WindowStyle="None"
             AllowsTransparency="True" ResizeMode="CanResize" WindowState="Normal"
             Height="500" Width="1000" MinHeight="500" MinWidth="400">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction
             Command="{Binding MainWindowLoaded}"
             CommandParameter="{Binding ElementName=ThisWindow}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" CornerRadius="10" GlassFrameThickness="0"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <Style x:Key="TransparentToOrange" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="Transparent" BorderBrush="Transparent" CornerRadius="5" 
                                BorderThickness="0" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Grid>
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          ContentSource="{TemplateBinding Content}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="ButtonIsEnabled">
                                        <Storyboard >
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="ButtonIsEnabled"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="ButtonNotEnabled">
                                        <Storyboard >
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="ButtonNotEnabled"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="MouseOverNotPressed">
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="border" From="Transparent" To="#DB5817" Duration="0:0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="MouseOverNotPressed"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsPressed" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard x:Name="MouseLeaveNotPressed">
                                        <Storyboard >
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="border" To="Transparent" Duration="0:0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="MouseLeaveNotPressed"/>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border BorderThickness="5" CornerRadius="10">
        <Border.BorderBrush>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.5" Opacity="1">
                <GradientStop Color="LightGray" Offset="0.5"/>
                <GradientStop Color="DarkGray" Offset="1.0"/>
            </LinearGradientBrush>
        </Border.BorderBrush>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <Border Grid.Row="1" Name="Body" Background="White" CornerRadius="0,0,5,5">
                <Grid>
                    <Frame x:Name="MainFrame" NavigationUIVisibility="Hidden">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction
                                     Command="{Binding MainFrameLoaded}"
                                     CommandParameter="{Binding ElementName=MainFrame}"/>      
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Frame>
                </Grid>
            </Border>


            <Border Grid.Row="0" Name="Header" Background="White" CornerRadius="5,5,0,0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DragAction}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Border.Effect>
                    <DropShadowEffect Color="Gray" Direction="270" BlurRadius="5" ShadowDepth="2" Opacity="0.3"/>
                </Border.Effect>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="200"/>
                    </Grid.ColumnDefinitions>

                    <Image Grid.Column="0" Source="/QRToolbox;component/Resources/simply-scanner.png" Margin="10"/>

                    <Label Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0"
                           Content="QR TOOLBOX" FontSize="18" FontWeight="Medium" FontFamily="Times New Roman"/>

                    <Grid Grid.Column="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Margin="5,10" Style="{DynamicResource TransparentToOrange}" Command="{Binding BackAction}">
                            <Image Source="/QRToolbox;component/Resources/back.png"/>
                        </Button>
                        <Button Grid.Column="1" Margin="5,10" Style="{DynamicResource TransparentToOrange}" Command="{Binding MinimizeAction}">
                            <Image Source="/QRToolbox;component/Resources/minimize.png"/>
                        </Button>
                        <Button Grid.Column="2" Margin="5,10" Style="{DynamicResource TransparentToOrange}" Command="{Binding MaximizeAction}">
                            <Image Source="/QRToolbox;component/Resources/maximize.png"/>
                        </Button>
                        <Button Grid.Column="3" Margin="5,10" Style="{DynamicResource TransparentToOrange}" Command="{Binding CloseAction}">
                            <Image Source="/QRToolbox;component/Resources/close.png"/>
                        </Button>
                    </Grid>
                </Grid>
            </Border>

        </Grid>
    </Border>
    
</Window>
